Blockchain, Ethereum, Smart Contracts & Use Cases
19 June 2019
Tags: Ethereum, Solidity, Smart Contracts, ETHKL, WomenWhoCode 

Zulhilmi Zainudin
Blockchain Developer
www.HelloGold.com

* What I intend to cover

- Blockchain concepts
- Smart contracts concepts
- Why and when blockchains and smart contracts may be useful


* Blockchain
.image images/blockchain-bg.jpg 500 _

* What is a blockchain?

- Collection of signed transactions
- Put into signed blocks
- Which is distributed all over a decentralised network
- In a manner such that all the independant nodes that operate the network agree the whole thing to be valid (consensus)

* What about transactions?
- Anything that can change the state of something
- A transfer of value or data

    {
       From : "Dave"
       To : "Alice"
       Value : 100
       Data : "Happy Birthday Alice!"
    }

Web analogy:

.code demo_code.txt /start REST OMIT/,/end REST OMIT/

* Digital signatures
- Let's assume we want to store wisdom quote below in blockchain.
- A small change in the content causes a huge change in the result.
.play hashBaby.go  /start main OMIT/,/end main OMIT/

If I encrypt the hash value using my key, you can prove it was from me and make it unforgeable

* Public key encryption
- Create a truly random a private key
- Public key (address) derived from private key
- Something encrypted by private key can be read with public key 
- You can derive the signer from the encrypted data
- Encrypting the hash, ensures that the hash, thus the document is unchanged
- And ensures that the signer is who they say they are.

.code demo_code.txt /start RESTx OMIT/,/end RESTx OMIT/

* Signing
.image images/hashing.png

* Into the blocks

.image images/intoblocks.png 500 _

* Consensus - how everybody agrees

- Let's watch this short video - https://youtu.be/0RmgcGFKoGM
- There are thousands of nodes all working together
- Design of consensus algorithm ensures that no one node makes all the decisions
- Makes it virtually impossible for anybody to modify the past records in the chain
- Means that each node has an identical copy of the state of the blockchain

* Etherscan

- https://etherscan.io 
.image images/etherscan.png 350 _

* Etherscan
- the 'Google' of the Ethereum blockchain

.image images/etherscan2.png 300 _

* Wallets

.image images/wallets.jpg 450 _


* Easy ways to access your account/balance?

Something that *performs* *one* *or* *more* *of*:
- managing keys
- creating transactions
- signing transactions

* So, blockchain is here to create...

- A currency that cannot be manipulated by a central authority
- Fully open
- No one person controls the code
- Anybody can fork the code to create a new blockchain with new attributes

* Ethereum - what is so special?

.image images/ethereumAndSmart.png 450 _
 
* Introducing Smart Contracts
- Remember the "data" field? ("Happy Birthday Alice!")
- We could structure it so it could be understood - in a program called Smart Contract
- We could have programs running on thousands of nodes - that all agree with each other (consensus)

* What are smart contracts

.image images/smartcontractonchain.png

* And the whole thing is agreed and transparent

.image images/etherscan3.png 400 _

* Transaction data and log (event)

.image images/etherscan_tx.png 150 _ 
.image images/eventLog.png 250 _ 

* How do we know what the contract says?

.image images/verified_code.png 450 _ 

* So, what do we have?

- Known code that we can interact with
- That will do exactly what the code tells it to
- And cannot be changed by a malicous actor (unless upgrade specifically implemented)
- Exact copies of that code and state on 1000's of computers
- Unforgeable public records of past transactions

* So, what is the end result?

- We can transact with unknown parties as long as we can trust the code (contract)
- There is NO central authority enforcing compliance, code rules
- Transactions cannot be reversed (unless the code has a reversal mechanism built in)


* So where are we with Ethereum? 

- Early days. Like TCP/IP days.
- The 1980's for databases
- The year 2000 for the Internet

* Status

- We have a clunky slow system that works but could do better
- It is still pretty clumsy to interact with
- There is a LOT of research going on 
   - usability
   - scaling
   - payment channels
   - privacy
   - interoperability
   - security

* Main components so far

- Fungible Tokens (HGT/GOLDX)
- Non-Fungible Tokens (CryptoKitties)
- Multisignature wallets (MultiSig)
- Decentralised Autonomous Organisations (DAO)
- Decentralised exchanges

* Examples

- DAI (USD backed token)
.image images/dai.png 100 _ 

- Crypto Zombies game
.image images/zombie.png 100 _ 

* Commercial use of blockchain

- Banks using blockchain for settlements
- Facebook Libra Consortium (moving money between FB & partners)
- JP Morgan / Quorum

* Social Impact / Financial Inclusion

- HelloGold (of course)
- Sentinel Chain
- Gitcoin

* The blockchain ecosystem needs

- Developers
- Creative people to make it usable
- Researchers
- Community
